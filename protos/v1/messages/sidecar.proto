syntax = "proto3";
package messages;

import "google/protobuf/duration.proto";

option go_package = "github.com/samirgadkari/sidecar/protos/v1/messages";

message Header {
	string srcServType = 1;
	string dstServType = 2;
	bytes servId = 3;
	uint32 msgId = 4;
}

enum Status {
	OK = 0;
	ERR_SENDING_MSG = 1;
	ERR_RECEIVING_MSG = 2;
	ERR_SUBSCRIBING = 3;
	ERR_PUBLISHING = 4;
	ERR_LOGGING = 5;
}

message ResponseHeader {
	uint32 status = 1;
}

message Empty {}

message RegistrationMsg {

	Header header = 1;

	optional uint32 circuitFailureThreshold = 2;
	optional google.protobuf.Duration debounceDelay = 3;
	optional uint32 retryNum = 4;
	optional google.protobuf.Duration retryDelay = 5;
}

message RegistrationMsgResponse {

	Header header = 1;
	ResponseHeader rspHeader = 2;
	string msg = 3;
}

// Publish the given bytes on the given topic.
message PubMsg {
	Header header = 1;
	string topic = 2;
	bytes msg = 3;
}

message PubMsgResponse {

	Header header = 1;
	ResponseHeader rspHeader = 2;
	string msg = 3;
}

message SubMsg {
	Header header = 1;
	string topic = 2;
}

message SubMsgResponse {

	Header header = 1;
	ResponseHeader rspHeader = 2;
	string msg = 3;
}

message SubTopicResponse {

	Header header = 1;
	string topic = 2;
	bytes msg = 3;
}

message LogMsg {
	Header header = 1;
	string msg = 2;
}

message LogMsgResponse {

	Header header = 1;
	ResponseHeader rspHeader = 2;
	string msg = 3;
}

service Sidecar {
	rpc Register (RegistrationMsg) returns (RegistrationMsgResponse);
	rpc Sub (SubMsg) returns (SubMsgResponse);
	rpc Recv (Empty) returns (SubTopicResponse);
	rpc Pub (PubMsg) returns (PubMsgResponse);
	rpc Log (LogMsg) returns (LogMsgResponse);
}
