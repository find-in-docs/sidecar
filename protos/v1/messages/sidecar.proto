syntax = "proto3";
package messages;

import "google/protobuf/duration.proto";

option go_package = "github.com/samirgadkari/sidecar/protos/v1/messages";

message Header {
	string srcServType = 1;
	string dstServType = 2;
	uint64 servId = 3;
	uint32 msgId = 4;
}

enum Status {
	OK = 0;
	ERR_SENDING_MSG = 1;
	ERR_RECEIVING_MSG = 2;
	ERR_SUBSCRIBING = 3;
	ERR_PUBLISHING = 4;
	ERR_LOGGING = 5;
}

message ResponseHeader {
	uint32 status = 1;
}

message Empty {}

message Limit {
	oneof limit {
		uint32 circuitFailureThreshold = 1;
		google.protobuf.Duration debounceDelay = 2;
		uint32 retryNum = 3;
		google.protobuf.Duration retryDelay = 4;
	}
}

message RegistrationMsg {

	Header header = 1;

	repeated Limit limits = 2;
}

message PubMsg {
	ResponseHeader header = 1;
	string msg = 2;
}

message SubMsg {
	ResponseHeader header = 1;
	string msg = 2;
}

message LogMsg {
	ResponseHeader header = 1;
	string msg = 2;
}

message RegistrationResponse {

	ResponseHeader header = 1;
	string msg = 2;
}

message SubResponse {

	ResponseHeader header = 1;
	string msg = 2;
}

message RecvResponse {

	Header header = 1;
	bytes data = 2;
}

message PubResponse {

	ResponseHeader header = 1;
	string msg = 2;
}

message LogResponse {

	ResponseHeader header = 1;
	string msg = 2;
}

service Sidecar {
	rpc Register (RegistrationMsg) returns (RegistrationResponse);
	rpc Sub (SubMsg) returns (SubResponse);
	rpc Recv (Empty) returns (RecvResponse);
	rpc Pub (PubMsg) returns (PubResponse);
	rpc Log (LogMsg) returns (LogResponse);
}
